# .github/workflows/update-odds.yml (Commits Dated CSVs)

name: Update Tennis Odds Page

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    # Runs every day at 06:00 UTC (adjust as needed)
    - cron: '0 6 * * *'

permissions:
  contents: write # Needed to commit changes AND checkout
  pages: write    # Needed to deploy to GitHub Pages
  id-token: write # Needed for deployment authentication

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to compare changes

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Firefox and xvfb
        run: |
          sudo apt-get update -y
          sudo apt-get install -y firefox xvfb

      - name: Install geckodriver
        run: |
          GECKODRIVER_VERSION=$(curl -s "https://api.github.com/repos/mozilla/geckodriver/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          wget https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
          tar -xzf geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Run Scraper to Generate Dated CSV
        # This script now saves to 'data_archive/sackmann_data_YYYYMMDD.csv'
        run: xvfb-run python save_sackmann_data.py

      # --- Updated Steps to Commit Dated CSV ---
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Stage New CSV File(s)
        # Add all files in the data_archive directory.
        run: |
          if [ -d "data_archive" ]; then
            git add data_archive/*.csv
          else
            echo "data_archive directory not found, nothing to stage."
          fi

      - name: Commit New CSV(s) if any were staged
        # Check if there are staged changes before attempting commit
        run: |
          # Check if 'git add' actually staged anything
          if ! git diff --staged --quiet; then
            git commit -m "Add/Update Sackmann data CSV(s) (`date -u +%Y-%m-%d`)"
          else
            echo "No changes to CSV files to commit."
          fi

      - name: Push CSV Changes
        run: |
           # Only push if there are new commits to the current branch compared to remote
           # Check if local branch is ahead of remote before pushing
           if [ $(git rev-list --count origin/${{ github.ref_name }}..${{ github.ref_name }}) -gt 0 ]; then
             git push origin ${{ github.ref_name }}
           else
             echo "No new commits to push."
           fi

      # --- End of Updated Steps ---

      - name: Generate HTML Page from Latest CSV
        # This script now finds the latest CSV in 'data_archive/'
        run: python generate_page.py

      - name: Verify HTML Output
        run: |
          # Check if the HTML was updated (contains timestamp and not placeholder)
          if ! grep -q "Last updated:" index.html; then
            echo "Warning: index.html does not seem to contain the 'Last updated' timestamp."
            # Decide if this should be an error: exit 1
          fi
          # *** CORRECTED GREP COMMAND BELOW ***
          if grep -q "" index.html; then
            echo "Warning: index.html might still contain the table placeholder."
            # Decide if this should be an error: exit 1
          fi
          echo "HTML verification check complete."

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          path: '.'
          # path: './index.html' # Upload only the final HTML for the Pages site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
