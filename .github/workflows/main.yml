# .github/workflows/main.yml

name: Scrape Tennis Data & Update Page

on:
  schedule:
    # Runs daily at a specific UTC time (adjust as needed)
    # Example: Run at 06:00 UTC daily
    - cron: '0 6 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to commit changes back to the repo
      pages: write # Required to deploy to GitHub Pages
      id-token: write # Required for GitHub Pages deployment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
           persist-credentials: false # Fetch without credentials initially

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Google Chrome
        run: |
          # 1. Install prerequisites
          sudo apt-get update
          sudo apt-get install -y wget gpg software-properties-common
          # 2. Download Google's signing key and add it
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor | sudo tee /usr/share/keyrings/google-chrome-keyring.gpg > /dev/null
          # 3. Add the Google Chrome repository
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          # 4. Update package list again after adding repo
          sudo apt-get update
          # 5. Install Google Chrome Stable
          sudo apt-get install -y google-chrome-stable
          # 6. Verify installation (optional)
          google-chrome --version

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Sackmann Data Pipeline
        id: sackmann_scrape
        run: python save_sackmann_data.py # Produces sackmann_matchups_*.csv

      - name: Run Betcenter Odds Scraper
        id: betcenter_scrape
        continue-on-error: true
        run: python betcenter_odds_scraper.py # Produces betcenter_odds_*.csv

      - name: Process and Merge Data
        id: process_data
        run: python process_data.py # Produces processed_comparison_*.csv

      - name: Generate HTML Page from Latest Processed CSV
        id: generate_html
        run: python generate_page.py # Reads processed_comparison_*.csv

      # --- Commit Files ---
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Stage Generated Files # Updated Step Name
        run: |
          echo "Staging index.html and all relevant CSV files..."
          # Add the HTML page
          git add index.html
          # Add the raw Sackmann data
          git add data_archive/sackmann_matchups_*.csv
          # Add the raw Betcenter data
          git add data_archive/betcenter_odds_*.csv
          # Add the final processed data
          git add data_archive/processed_comparison_*.csv
          # Use git status to see what's staged (optional debug)
          git status

      - name: Commit Updates
        run: |
          # Check if there are changes staged for commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            echo "Committing updated data and page..."
            git commit -m "Automated data processing and page update"
          fi

      # --- Push Changes ---
      - name: Push Changes
        run: |
          # Only push if the previous step actually made a commit
          git fetch origin ${{ github.ref }} # Ensure remote ref is up-to-date
          # Check if local branch is ahead of remote before pushing
          if [[ $(git rev-list --count @{u}..HEAD) -gt 0 ]]; then
             echo "Local branch is ahead, attempting to push changes..."
             # Push using the GITHUB_TOKEN
             git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
          else
             echo "No local commits to push."
          fi
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- GitHub Pages Deployment ---
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Artifact for Pages Deployment
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the root directory which contains index.html and data_archive/
          # GitHub Pages action will serve index.html from the root.
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

