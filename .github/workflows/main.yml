# .github/workflows/main.yml (Improved Git Add Check)

name: Update Tennis Odds Page

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Chromium and Chromedriver
        run: |
          sudo apt-get update -y
          sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Verify Chromium Version
        run: chromium-browser --version

      - name: Verify Chromedriver Version
        run: chromedriver --version

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Run Scraper to Generate Dated CSV
        run: python save_sackmann_data.py

      # Use the less strict verification (warn only)
      - name: Verify CSV Creation
        run: |
          mkdir -p data_archive # Ensure directory exists
          file_count=$(find data_archive -maxdepth 1 -name 'sackmann_data_*.csv' -print -quit | wc -l)
          if [ "$file_count" -eq 0 ]; then
            echo "Warning: No CSV file found in data_archive after scraper run. Proceeding without data."
            # No exit 1 here
          else
            echo "CSV file successfully found in data_archive."
            ls -l data_archive/sackmann_data_*.csv
          fi

      # --- Steps to Commit the generated CSV back to the repository ---
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # *** MODIFIED STEP: Stage New CSV File(s) with pre-check ***
      - name: Stage New CSV File(s)
        run: |
          # Check if directory exists AND contains matching files before trying to add
          if [ -d "data_archive" ] && [ "$(find data_archive -maxdepth 1 -name 'sackmann_data_*.csv' -print -quit | wc -l)" -gt 0 ]; then
            # Add files using the pattern (ignore errors just in case, though unlikely needed now)
            git add --ignore-errors data_archive/*.csv
            echo "Attempted to stage CSV files from data_archive."
          else
            # Print message if directory/files not found or no files match
            echo "data_archive directory not found or no CSV files to stage."
          fi
      # *** END MODIFIED STEP ***

      - name: Commit New CSV(s) if any were staged
        run: |
          if ! git diff --staged --quiet; then
            git commit -m "Add/Update Sackmann data CSV(s) (`date -u +%Y-%m-%d`)"
            echo "Committed CSV changes."
          else
            echo "No changes to CSV files to commit."
          fi

      - name: Push CSV Changes
        run: |
           if [ $(git rev-list --count origin/${{ github.ref_name }}..${{ github.ref_name }}) -gt 0 ]; then
             git push origin ${{ github.ref_name }}
             echo "Pushed CSV commits to origin."
           else
             echo "No new commits to push."
           fi
      # --- End of CSV Commit Steps ---

      - name: Generate HTML Page from Latest CSV
        run: python generate_page.py

      - name: Verify HTML Output
        run: |
          if [ ! -f index.html ]; then
            echo "Error: index.html not found after generation step."
            exit 1
          fi
          if ! grep -q "Last updated:" index.html; then
            echo "Warning: index.html does not seem to contain the 'Last updated' timestamp."
          fi
          # Use corrected placeholder check
          if grep -q "" index.html; then
            echo "Warning: index.html might still contain the table placeholder."
          fi
          echo "HTML verification check complete."

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
